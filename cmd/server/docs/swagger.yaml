definitions:
  github_com_qhmd_gitforgits_internal_domain_book.Book:
    properties:
      author:
        example: John Smith
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      page:
        example: 205
        type: integer
      title:
        example: How To Become Backend Engineer
        type: string
      updatedAt:
        type: string
    type: object
  github_com_qhmd_gitforgits_internal_dto.BookNotFoundResponse:
    properties:
      error:
        example: book not found
        type: string
    type: object
  github_com_qhmd_gitforgits_internal_dto.BookRequest:
    properties:
      author:
        example: John Smith
        maxLength: 50
        minLength: 4
        type: string
      page:
        example: 205
        type: integer
      title:
        example: How To Become Backend Engineer
        type: string
    required:
    - author
    - page
    - title
    type: object
  github_com_qhmd_gitforgits_internal_dto.DeleteSuccesfullu:
    properties:
      error:
        example: delete successfully
        type: string
    type: object
  github_com_qhmd_gitforgits_internal_dto.ErrorResponse:
    properties:
      error:
        example: something went wrong
        type: string
    type: object
  github_com_qhmd_gitforgits_internal_dto.InvalidId:
    properties:
      error:
        example: Invalid id
        type: string
    type: object
  github_com_qhmd_gitforgits_internal_dto.MissingAuthorization:
    properties:
      error:
        example: missing authorization header
        type: string
    type: object
  github_com_qhmd_gitforgits_internal_dto.SuccessfullUpdate:
    properties:
      data:
        $ref: '#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book'
      message:
        example: update successfully
        type: string
    type: object
  github_com_qhmd_gitforgits_internal_dto.TitleAlreadytaken:
    properties:
      error:
        example: Email already taken
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
info:
  contact: {}
  description: API documentation for project GitForGits
  termsOfService: http://swagger.io/terms/
  title: GitForGits API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Retrieve all books from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.ErrorResponse'
      summary: Get all books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Add a new book to the database
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.BookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.MissingAuthorization'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.TitleAlreadytaken'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Create a new book
      tags:
      - Books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a book from the database using its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.DeleteSuccesfullu'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.InvalidId'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.BookNotFoundResponse'
      security:
      - BearerAuth: []
      summary: Delete book by ID
      tags:
      - Books
    get:
      consumes:
      - application/json
      description: Retrieve a single book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.BookNotFoundResponse'
      summary: Get book by ID
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update book information by its ID, u have to login first to access
        your access token
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.SuccessfullUpdate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.InvalidId'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.BookNotFoundResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_qhmd_gitforgits_internal_dto.ErrorResponse'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      summary: Update book by ID
      tags:
      - Books
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
